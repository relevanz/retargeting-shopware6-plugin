!function(){var e={839:function(){},963:function(){},674:function(){let{Mixin:e,Application:t}=Shopware;e.register("releva-notification",{mixins:[e.getByName("notification")],methods:{handleNotifications(e){var a,n,r=t.getApplicationRoot();for(var i in e){var s="releva-retargeting.messages."+e[i].code;r.$t(s+".title")===s+".title"?(a=r.$t("releva-retargeting.messages.fallback.title",{title:e[i].message}),n=r.$t("releva-retargeting.messages.fallback.message",{code:e[i].code,data:JSON.stringify(e[i].data)})):(a=r.$t(s+".title",e[i].data),n=r.$t(s+".message",e[i].data)),this.createNotification({title:a,message:n,variant:e[i].variant})}},handleAjaxErrors(e){if(e&&e.errors){var a=t.getApplicationRoot();e.errors.forEach(e=>{this.createNotification({title:a.$t("releva-retargeting.messages.ajax.title"),message:a.$t("releva-retargeting.messages.ajax.message",e),variant:"error"})})}}}})},878:function(e,t,a){var n=a(839);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),(0,a(534).A)("0d9e2b04",n,!0,{})},368:function(e,t,a){var n=a(963);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),(0,a(534).A)("3300f080",n,!0,{})},534:function(e,t,a){"use strict";function n(e,t){for(var a=[],n={},r=0;r<t.length;r++){var i=t[r],s=i[0],l={id:e+":"+r,css:i[1],media:i[2],sourceMap:i[3]};n[s]?n[s].parts.push(l):a.push(n[s]={id:s,parts:[l]})}return a}a.d(t,{A:function(){return p}});var r,i="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!i)throw Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var s={},l=i&&(document.head||document.getElementsByTagName("head")[0]),o=null,c=0,g=!1,h=function(){},d=null,u="data-vue-ssr-id",f="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function p(e,t,a,r){g=a,d=r||{};var i=n(e,t);return m(i),function(t){for(var a=[],r=0;r<i.length;r++){var l=s[i[r].id];l.refs--,a.push(l)}t?m(i=n(e,t)):i=[];for(var r=0;r<a.length;r++){var l=a[r];if(0===l.refs){for(var o=0;o<l.parts.length;o++)l.parts[o]();delete s[l.id]}}}}function m(e){for(var t=0;t<e.length;t++){var a=e[t],n=s[a.id];if(n){n.refs++;for(var r=0;r<n.parts.length;r++)n.parts[r](a.parts[r]);for(;r<a.parts.length;r++)n.parts.push(b(a.parts[r]));n.parts.length>a.parts.length&&(n.parts.length=a.parts.length)}else{for(var i=[],r=0;r<a.parts.length;r++)i.push(b(a.parts[r]));s[a.id]={id:a.id,refs:1,parts:i}}}}function v(){var e=document.createElement("style");return e.type="text/css",l.appendChild(e),e}function b(e){var t,a,n=document.querySelector("style["+u+'~="'+e.id+'"]');if(n){if(g)return h;n.parentNode.removeChild(n)}if(f){var r=c++;t=S.bind(null,n=o||(o=v()),r,!1),a=S.bind(null,n,r,!0)}else t=I.bind(null,n=v()),a=function(){n.parentNode.removeChild(n)};return t(e),function(n){n?(n.css!==e.css||n.media!==e.media||n.sourceMap!==e.sourceMap)&&t(e=n):a()}}var C=(r=[],function(e,t){return r[e]=t,r.filter(Boolean).join("\n")});function S(e,t,a,n){var r=a?"":n.css;if(e.styleSheet)e.styleSheet.cssText=C(t,r);else{var i=document.createTextNode(r),s=e.childNodes;s[t]&&e.removeChild(s[t]),s.length?e.insertBefore(i,s[t]):e.appendChild(i)}}function I(e,t){var a=t.css,n=t.media,r=t.sourceMap;if(n&&e.setAttribute("media",n),d.ssrId&&e.setAttribute(u,t.id),r&&(a+="\n/*# sourceURL="+r.sources[0]+" */",a+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+" */"),e.styleSheet)e.styleSheet.cssText=a;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(a))}}}},t={};function a(n){var r=t[n];if(void 0!==r)return r.exports;var i=t[n]={id:n,exports:{}};return e[n](i,i.exports,a),i.exports}a.d=function(e,t){for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="bundles/relevaretargeting/",window?.__sw__?.assetPath&&(a.p=window.__sw__.assetPath+"/bundles/relevaretargeting/"),function(){"use strict";a(674),a(368);let{Component:e,Mixin:t}=Shopware;e.register("releva-retargeting-statistic",{template:'{% block releva_retargeting_statistic %}\n    <sw-page class="releva-retargeting-statistic">\n        <template #smart-bar-actions>\n            {% block releva_retargeting_statistic_actions %}\n                <sw-single-select\n                    v-if="salesChannelsToIframeUrl && salesChannelsToIframeUrl.length > 1"\n                    class="releva-frame-releva-sales-channel-switch"\n                    size="big" \n                    labelProperty="salesChannel"\n                    valueProperty="iframeUrl"\n                    @update:value="onSalesChannelsToIframeUrlSelectionChange"\n                    :value="currentIframeUrl"\n                    :options="salesChannelsToIframeUrl"\n                    :placeholder="$tc(\'releva-retargeting.config.relevaSalesChannelSwitch.label\')"\n                ></sw-single-select>\n            {% endblock %}\n        </template>\n        <template #content>\n            {% block releva_retargeting_statistic_content %}\n                <div v-if=\'currentIframeUrl\' class="releva-frame-container">\n                    <template>\n                        <iframe v-bind:src="currentIframeUrl" class="releva-frame-frame"></iframe>\n                    </template>\n                </div>\n            {% endblock %}\n        </template>\n    </sw-page>\n{% endblock %}\n',inject:["retargetingApiService"],mixins:[t.getByName("releva-notification")],metaInfo(){return{title:this.$createTitle()}},data(){return{currentIframeUrl:null,salesChannelsToIframeUrl:null}},created(){this.retargetingApiService.getInvolvedSalesChannelsToIframeUrls().then(e=>{this.handleNotifications(e.notifications),this.salesChannelsToIframeUrl=e.data,this.onSalesChannelsToIframeUrlSelectionChange(this.salesChannelsToIframeUrl[0].iframeUrl)}).catch(({response:{data:e}})=>{this.handleAjaxErrors(e)})},methods:{onSalesChannelsToIframeUrlSelectionChange(e){this.currentIframeUrl=e}}}),a(878);let{Component:n,Mixin:r}=Shopware;n.extend("releva-config-check-api-button","sw-text-field",{template:'{% block sw_text_field %}\n    {% block releva_config_check_api_button %}\n        <template v-if="salesChannel">\n            <sw-contextual-field v-bind="$attrs" :name="formFieldName">\n                <template #sw-field-input="{identification, error, disabled, size, setFocusClass, removeFocusClass }">\n                    <mt-text-field\n                        v-bind="$attrs"\n                        :model-value="compatValue"\n                        @update:modelValue="handleUpdateModelValue"\n                    />\n                </template>\n                <template class="test" #sw-contextual-field-suffix="{ disabled }">\n                    <span @click="changeMode(disabled)" class="releva-config-check-api-button-button">\n                        <span v-if="buttonText" class="releva-config-check-api-button-button-text">\n                            <sw-icon v-if="buttonIcon" class="releva-config-check-api-button-button-icon" :color="buttonIcon.color" :name="buttonIcon.name" :small="true"></sw-icon>\n                        </span>\n                    </span>\n                </template>\n            </sw-contextual-field>\n        </template>\n        <template v-else>\n            {{ scopeMessage }}\n        </template>\n    {% endblock %}\n{% endblock %}',inheritAttrs:!1,mixins:[r.getByName("releva-notification")],inject:["retargetingApiService"],data(){var e,t;return{checkApiState:"unchecked",buttonText:(e="releva-retargeting"+this.$attrs.name.substr(this.$attrs.name.indexOf("."))+".button",t=this.$tc(e),e!==t&&t),salesChannel:function(e){for(var t=e;void 0!==t.$parent;)if(void 0!==(t=t.$parent).currentSalesChannelId)return t.currentSalesChannelId;return""}(this),scopeMessage:this.$attrs.scopeMessage}},computed:{buttonIcon(){if(void 0!==this.compatValue)switch(this.checkApiState){case"success":return{name:"regular-check-circle",color:"green"};case"error":return{name:"regular-exclamation-circle",color:"red"};case"checking":return{name:"regular-sync",color:"gray"};case"unchecked":return{name:"regular-cloud-upload",color:"silver"};default:return{name:"regular-ellipsis-h-s",color:"silver"}}},checkApiState(){this.disabled()},disabled(){return void 0!==this.compatValue&&""!==this.compatValue.trim()}},methods:{changeMode(e){if(!e&&(void 0!==this.compatValue?this.compatValue.trim():"")!==""){this.checkApiState="checking";var t=this;this.retargetingApiService.getVerifyApiKey({apiKey:void 0!==this.compatValue?this.compatValue.trim():"",salesChannel:function(e){for(;void 0!==e.$parent;)if(void 0!==(e=e.$parent).currentSalesChannelId)return e.currentSalesChannelId;return""}(this)}).then(e=>{t.checkApiState=null===e.data.userId?"error":"success",this.handleNotifications(e.notifications)}).catch(({response:{data:e}})=>{t.checkApiState="unchecked",t.handleAjaxErrors(e)})}}}});let{Component:i,Defaults:s,Mixin:l,State:o}=Shopware,{Criteria:c}=Shopware.Data;i.override("sw-system-config",{template:'{% block sw_system_config_content_card_field %}\n    <template v-if="isDefaultSalesChannelOrGlobalScope(element)">\n        {% parent() %}\n    </template>\n    <template v-else>\n        <sw-inherit-wrapper\n            v-model:value="actualConfigData[currentSalesChannelId][element.name]"\n            v-bind="getInheritWrapperBind(element)"\n            :has-parent="false"{# only change to parent block to disable inheritance of global config values #}\n            :inherited-value="getInheritedValue(element)"\n            :class="\'sw-system-config--field-\' + kebabCase(getElementBind(element).name)"\n        >\n            <template #content="props">\n                <sw-form-field-renderer\n                    v-bind="getElementBind(element, props)"\n                    :key="props.isInheritField + props.isInherited"\n                    :disabled="props.isInherited"\n                    :value="props.currentValue"\n                    :error="getFieldError(element.name)"\n                    @update:value="props.updateCurrentValue"\n                />\n            </template>\n        </sw-inherit-wrapper>\n    </template>\n{% endblock %}',inject:["retargetingApiService"],mixins:[l.getByName("releva-notification")],watch:{currentSalesChannelId(){this.readConfig()},config(){if("RelevaRetargeting.config"===this.domain)for(var e of this.config){for(var t of e.elements)!this.currentSalesChannelId&&t.config.hasOwnProperty("scope")&&"global"!==t.config.scope?e.elements=e.elements.filter(function(e){return t!==e}):t.config.disabled=!!t.config.hasOwnProperty("disabled")&&t.config.disabled;0===e.elements.length&&(this.config=this.config.filter(function(t){return e!==t}))}}},methods:{saveAll(){return(this.isLoading=!0,"RelevaRetargeting.config"===this.domain&&this.currentSalesChannelId)?this.retargetingApiService.getVerifyApiKey({apiKey:this.actualConfigData[this.currentSalesChannelId]["RelevaRetargeting.config.relevanzApiKey"],salesChannel:this.currentSalesChannelId,save:!0}).then(e=>(this.actualConfigData.hasOwnProperty(this.currentSalesChannelId)&&(this.actualConfigData[this.currentSalesChannelId]["RelevaRetargeting.config.relevanzUserId"]=e.data.userId),this.handleNotifications(e.notifications),this.$super("saveAll"))).catch(({response:{data:e}})=>(this.handleAjaxErrors(e),this.$super("saveAll"))).finally(()=>this.isLoading=!1):this.$super("saveAll")},isDefaultSalesChannelOrGlobalScope(e){return!("RelevaRetargeting.config"===this.domain&&(e.config.hasOwnProperty("scopeMessage")||e.config.hasOwnProperty("scope")&&"global"!==e.config.scope))}}});let{ApiService:g}=Shopware.Classes;var h=class extends g{constructor(e,t,a="/releva/retargeting"){super(e,t,a)}getInvolvedSalesChannelsToIframeUrls(e){let t=`${this.getApiBasePath()}/getInvolvedSalesChannelsToIframeUrls`;return this.httpClient.post(t,{config:e},{headers:this.getBasicHeaders()}).then(e=>g.handleResponse(e))}getVerifyApiKey(e){let t=`${this.getApiBasePath()}/getVerifyApiKey`;return this.httpClient.post(t,{config:e},{headers:this.getBasicHeaders()}).then(e=>g.handleResponse(e))}};let{Application:d}=Shopware;d.addServiceProvider("retargetingApiService",e=>new h(d.getContainer("init").httpClient,e.loginService));var u=JSON.parse('{"releva-retargeting":{"general":{"mainMenuItemGeneral":"releva.nz"},"config":{"relevanzApiKey":{"button":"API-Zugangsdaten testen"},"relevaSalesChannelSwitch":{"label":"Storefront-Verkaufskanal"}},"messages":{"1553935480":{"title":"Kann keine Verbindung zum releva.nz API-Server herstellen.","message":"salesChannel: {salesChannelName}, data: {data}"},"1553935569":{"title":"@:releva-retargeting.messages.1553935786.title","message":"@:releva-retargeting.messages.1553935786.message"},"1553935786":{"title":"Ihr API Key f\xfcr releva.nz und Verkaufskanal \\"{salesChannelName}\\" ist fehlerhaft.","message":"<a href=\\"#/sw/extension/config/RelevaRetargeting\\">Konfiguriere Plugin hier.</a>"},"1579084006":{"title":"Es wurde kein Verkaufskanal f\xfcr das releva.nz Plugin konfiguriert.","message":"Noch nicht registriert? <a href=\\"https://releva.nz\\" target=\\"blank\\">Jetzt nachholen.</a> Bereits registriert? <a href=\\"#/sw/extension/config/RelevaRetargeting\\">Konfiguriere Plugin hier.</a>"},"1579849966":{"title":"Verkaufskanal hat keine Domain.","message":"Verkaufskanal <a href=\\"#/sw/sales/channel/detail/{salesChannelId}\\">{salesChannelName}</a> ben\xf6tigt eine Domain f\xfcr den releva.nz Produktexport."},"ajax":{"title":"@:releva-retargeting.general.mainMenuItemGeneral hat einen Fehler verursacht","message":"{title}: {detail}"},"fallback":{"title":"{title}","message":"code: {code}, data: {data}"}}}}'),f=JSON.parse('{"releva-retargeting":{"general":{"mainMenuItemGeneral":"releva.nz"},"config":{"relevanzApiKey":{"button":"Check API-Access"},"relevaSalesChannelSwitch":{"label":"Storefront-sales-channel"}},"messages":{"1553935480":{"title":"Unable to connect to releva.nz API-Server.","message":"salesChannel: {salesChannelName}, data: {data}"},"1553935569":{"title":"@:releva-retargeting.messages.1553935786.title","message":"@:releva-retargeting.messages.1553935786.message"},"1553935786":{"title":"The API key for sales-channel \\"{salesChannelName}\\" cannot be verified. Please make sure that the API key is correct.","message":"<a href=\\"#/sw/extension/config/RelevaRetargeting\\">Configure plugin here.</a>"},"1579084006":{"title":"No sales-channels are configured for releva.nz plugin.","message":"Not yet registered? <a href=\\"https://releva.nz\\" target=\\"blank\\">Now catch up.</a> Already registered? <a href=\\"#/sw/extension/config/RelevaRetargeting\\">Configure plugin here.</a>"},"1579849966":{"title":"Sales-channel doesn\'t have domain.","message":"Sales-channel <a href=\\"#/sw/sales/channel/detail/{salesChannelId}\\">{salesChannelName}</a> need a domain for the releva.nz article export."},"ajax":{"title":"@:releva-retargeting.general.mainMenuItemGeneral produced a error","message":"{title}: {detail}"},"fallback":{"title":"{title}","message":"code: {code}, data: {data}"}}}}');let{Module:p}=Shopware;p.register("releva-retargeting",{type:"plugin",name:"relevanz-retargeting",title:"releva-retargeting.general.mainMenuItemGeneral",favicon:"../../../../../relevaretargeting/administration/static/img/favicon/modules/icon-module-releva-retargeting.png",snippets:{"de-DE":u,"en-GB":f},routes:{statistic:{component:"releva-retargeting-statistic",path:"statistic"}},navigation:[{label:"releva-retargeting.general.mainMenuItemGeneral",path:"releva.retargeting.statistic",parent:"sw-marketing"}]})}()}();
const{Mixin:l,Application:o}=Shopware;l.register("releva-notification",{mixins:[l.getByName("notification")],methods:{handleNotifications(e){var t=o.getApplicationRoot(),a,n;for(var r in e){var s="releva-retargeting.messages."+e[r].code;t.$t(s+".title")===s+".title"?(a=t.$t("releva-retargeting.messages.fallback.title",{title:e[r].message}),n=t.$t("releva-retargeting.messages.fallback.message",{code:e[r].code,data:JSON.stringify(e[r].data)})):(a=t.$t(s+".title",e[r].data),n=t.$t(s+".message",e[r].data)),this.createNotification({title:a,message:n,variant:e[r].variant})}},handleAjaxErrors(e){if(e&&e.errors){var t=o.getApplicationRoot();e.errors.forEach(a=>{this.createNotification({title:t.$t("releva-retargeting.messages.ajax.title"),message:t.$t("releva-retargeting.messages.ajax.message",a),variant:"error"})})}}}});const g=`{% block releva_retargeting_statistic %} <sw-page class="releva-retargeting-statistic"> <template #smart-bar-actions> {% block releva_retargeting_statistic_actions %} <sw-single-select v-if="salesChannelsToIframeUrl && salesChannelsToIframeUrl.length > 1" class="releva-frame-releva-sales-channel-switch" size="big" labelProperty="salesChannel" valueProperty="iframeUrl" @update:value="onSalesChannelsToIframeUrlSelectionChange" :value="currentIframeUrl" :options="salesChannelsToIframeUrl" :placeholder="$tc('releva-retargeting.config.relevaSalesChannelSwitch.label')" ></sw-single-select> {% endblock %} </template> <template #content> {% block releva_retargeting_statistic_content %} <div v-if='currentIframeUrl' class="releva-frame-container"> <iframe :src="currentIframeUrl" class="releva-frame-frame"></iframe> </div> {% endblock %} </template> </sw-page> {% endblock %}`,{Component:h,Mixin:p}=Shopware;h.register("releva-retargeting-statistic",{template:g,inject:["retargetingApiService"],mixins:[p.getByName("releva-notification")],metaInfo(){return{title:this.$createTitle()}},data(){return{currentIframeUrl:null,salesChannelsToIframeUrl:null}},created(){this.retargetingApiService.getInvolvedSalesChannelsToIframeUrls().then(e=>{this.handleNotifications(e.notifications),this.salesChannelsToIframeUrl=e.data,this.onSalesChannelsToIframeUrlSelectionChange(this.salesChannelsToIframeUrl[0].iframeUrl)}).catch(({response:{data:e}})=>{this.handleAjaxErrors(e)})},methods:{onSalesChannelsToIframeUrlSelectionChange(e){this.currentIframeUrl=e}}});const d='{% block sw_text_field %} {% block releva_config_check_api_button %} <template v-if="salesChannel"> <sw-contextual-field v-bind="$attrs" :name="formFieldName"> <template #sw-field-input="{identification, error, disabled, size, setFocusClass, removeFocusClass }"> <mt-text-field v-bind="$attrs" :model-value="compatValue" @update:modelValue="handleUpdateModelValue" /> </template> <template class="test" #sw-contextual-field-suffix="{ disabled }"> <span @click="changeMode(disabled)" class="releva-config-check-api-button-button"> <span v-if="buttonText" class="releva-config-check-api-button-button-text"> <sw-icon v-if="buttonIcon" class="releva-config-check-api-button-button-icon" :color="buttonIcon.color" :name="buttonIcon.name" :small="true"></sw-icon> </span> </span> </template> </sw-contextual-field> </template> <template v-else> {{ scopeMessage }} </template> {% endblock %} {% endblock %}',{Component:m,Mixin:u}=Shopware;m.extend("releva-config-check-api-button","sw-text-field",{template:d,inheritAttrs:!1,mixins:[u.getByName("releva-notification")],inject:["retargetingApiService"],data(){return{checkApiState:"unchecked",buttonText:function(e){var t="releva-retargeting"+e.$attrs.name.substr(e.$attrs.name.indexOf("."))+".button",a=e.$tc(t);return t===a?!1:a}(this),salesChannel:function(e){for(var t=e;typeof t.$parent<"u";)if(t=t.$parent,typeof t.currentSalesChannelId<"u")return t.currentSalesChannelId;return""}(this),scopeMessage:this.$attrs.scopeMessage}},computed:{buttonIcon(){if(!(typeof this.compatValue>"u"))switch(this.checkApiState){case"success":return{name:"regular-check-circle",color:"green"};case"error":return{name:"regular-exclamation-circle",color:"red"};case"checking":return{name:"regular-sync",color:"gray"};case"unchecked":return{name:"regular-cloud-upload",color:"silver"};default:return{name:"regular-ellipsis-h-s",color:"silver"}}},checkApiState(){this.disabled()},disabled(){return typeof this.compatValue<"u"&&this.compatValue.trim()!==""}},methods:{changeMode(e){if(!(e||(typeof this.compatValue<"u"?this.compatValue.trim():"")==="")){this.checkApiState="checking";var t=this;this.retargetingApiService.getVerifyApiKey({apiKey:typeof this.compatValue<"u"?this.compatValue.trim():"",salesChannel:function(a){for(;typeof a.$parent<"u";)if(a=a.$parent,typeof a.currentSalesChannelId<"u")return a.currentSalesChannelId;return""}(this)}).then(a=>{t.checkApiState=a.data.userId===null?"error":"success",this.handleNotifications(a.notifications)}).catch(({response:{data:a}})=>{t.checkApiState="unchecked",t.handleAjaxErrors(a)})}}}});const f=`{% block sw_system_config_content_card_field %} <template v-if="domain !== 'RelevaRetargeting.config'"> {% parent() %} </template> <sw-inherit-wrapper v-else-if="isNotDefaultSalesChannel || !element.config.hasOwnProperty('scope') || element.config.scope === 'global'" v-model:value="actualConfigData[currentSalesChannelId][element.name]" v-bind="getInheritWrapperBind(element)" :has-parent="isNotDefaultSalesChannel && (!element.config.hasOwnProperty('scope') || element.config.scope === 'global')" {# changes to parent() #} :inherited-value="getInheritedValue(element)" :class="'sw-system-config--field-' + kebabCase(getElementBind(element).name)" > <template #content="props"> <sw-form-field-renderer v-bind="getElementBind(element, props)" :key="props.isInheritField + props.isInherited" :disabled="props.isInherited" :value="props.currentValue" :error="getFieldError(element.name)" @update:value="props.updateCurrentValue" /> </template> </sw-inherit-wrapper> <mt-banner v-else-if="getScopeMessage(element) !== null" :title="getInlineSnippet(element.config.label)" variant="info" > {{ getScopeMessage(element) }} </mt-banner> {% endblock %}`,{Component:v,Defaults:w,Mixin:C,State:A}=Shopware,{Criteria:y}=Shopware.Data;v.override("sw-system-config",{template:f,inject:["retargetingApiService"],mixins:[C.getByName("releva-notification")],methods:{getScopeMessage(e){var t={},a=!1;return e.config.hasOwnProperty("scopeMessage")&&(a=!0,t["en-EN"]=e.config.scopeMessage),e.config.hasOwnProperty("scopeMessageDE")&&(a=!0,t["de-DE"]=e.config.scopeMessageDE),a?this.getInlineSnippet(t):null},saveAll(){return this.isLoading=!0,this.domain==="RelevaRetargeting.config"&&this.currentSalesChannelId?this.retargetingApiService.getVerifyApiKey({apiKey:this.actualConfigData[this.currentSalesChannelId]["RelevaRetargeting.config.relevanzApiKey"],salesChannel:this.currentSalesChannelId,save:!0}).then(e=>(this.actualConfigData.hasOwnProperty(this.currentSalesChannelId)&&(this.actualConfigData[this.currentSalesChannelId]["RelevaRetargeting.config.relevanzUserId"]=e.data.userId),this.handleNotifications(e.notifications),this.$super("saveAll"))).catch(({response:{data:e}})=>(this.handleAjaxErrors(e),this.$super("saveAll"))).finally(()=>this.isLoading=!1):this.$super("saveAll")}}});const{ApiService:i}=Shopware.Classes;class S extends i{constructor(t,a,n="/releva/retargeting"){super(t,a,n)}getInvolvedSalesChannelsToIframeUrls(t){const a=`${this.getApiBasePath()}/getInvolvedSalesChannelsToIframeUrls`;return this.httpClient.post(a,{config:t},{headers:this.getBasicHeaders()}).then(n=>i.handleResponse(n))}getVerifyApiKey(t){const a=`${this.getApiBasePath()}/getVerifyApiKey`;return this.httpClient.post(a,{config:t},{headers:this.getBasicHeaders()}).then(n=>i.handleResponse(n))}}const{Application:c}=Shopware;c.addServiceProvider("retargetingApiService",e=>{const t=c.getContainer("init");return new S(t.httpClient,e.loginService)});const b={"releva-retargeting":{general:{mainMenuItemGeneral:"releva.nz"},config:{relevanzApiKey:{button:"API-Zugangsdaten testen"},relevaSalesChannelSwitch:{label:"Storefront-Verkaufskanal"}},messages:{1553935480:{title:"Kann keine Verbindung zum releva.nz API-Server herstellen.",message:"salesChannel: {salesChannelName}, data: {data}"},1553935569:{title:"@:releva-retargeting.messages.1553935786.title",message:"@:releva-retargeting.messages.1553935786.message"},1553935786:{title:'Ihr API Key für releva.nz und Verkaufskanal "{salesChannelName}" ist fehlerhaft.',message:'<a href="#/sw/extension/config/RelevaRetargeting">Konfiguriere Plugin hier.</a>'},1579084006:{title:"Es wurde kein Verkaufskanal für das releva.nz Plugin konfiguriert.",message:'Noch nicht registriert? <a href="https://releva.nz" target="blank">Jetzt nachholen.</a> Bereits registriert? <a href="#/sw/extension/config/RelevaRetargeting">Konfiguriere Plugin hier.</a>'},1579849966:{title:"Verkaufskanal hat keine Domain.",message:'Verkaufskanal <a href="#/sw/sales/channel/detail/{salesChannelId}">{salesChannelName}</a> benötigt eine Domain für den releva.nz Produktexport.'},ajax:{title:"@:releva-retargeting.general.mainMenuItemGeneral hat einen Fehler verursacht",message:"{title}: {detail}"},fallback:{title:"{title}",message:"code: {code}, data: {data}"}}}},I={"releva-retargeting":{general:{mainMenuItemGeneral:"releva.nz"},config:{relevanzApiKey:{button:"Check API-Access"},relevaSalesChannelSwitch:{label:"Storefront-sales-channel"}},messages:{1553935480:{title:"Unable to connect to releva.nz API-Server.",message:"salesChannel: {salesChannelName}, data: {data}"},1553935569:{title:"@:releva-retargeting.messages.1553935786.title",message:"@:releva-retargeting.messages.1553935786.message"},1553935786:{title:'The API key for sales-channel "{salesChannelName}" cannot be verified. Please make sure that the API key is correct.',message:'<a href="#/sw/extension/config/RelevaRetargeting">Configure plugin here.</a>'},1579084006:{title:"No sales-channels are configured for releva.nz plugin.",message:'Not yet registered? <a href="https://releva.nz" target="blank">Now catch up.</a> Already registered? <a href="#/sw/extension/config/RelevaRetargeting">Configure plugin here.</a>'},1579849966:{title:"Sales-channel doesn't have domain.",message:'Sales-channel <a href="#/sw/sales/channel/detail/{salesChannelId}">{salesChannelName}</a> need a domain for the releva.nz article export.'},ajax:{title:"@:releva-retargeting.general.mainMenuItemGeneral produced a error",message:"{title}: {detail}"},fallback:{title:"{title}",message:"code: {code}, data: {data}"}}}},{Module:k}=Shopware;k.register("releva-retargeting",{type:"plugin",name:"relevanz-retargeting",title:"releva-retargeting.general.mainMenuItemGeneral",favicon:"../../../../../relevaretargeting/administration/static/img/favicon/modules/icon-module-releva-retargeting.png",snippets:{"de-DE":b,"en-GB":I},routes:{statistic:{component:"releva-retargeting-statistic",path:"statistic"}},navigation:[{label:"releva-retargeting.general.mainMenuItemGeneral",path:"releva.retargeting.statistic",parent:"sw-marketing"}]});
//# sourceMappingURL=releva-retargeting-hNgXsI3r.js.map
